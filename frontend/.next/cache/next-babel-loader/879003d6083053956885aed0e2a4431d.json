{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anniinaaarnio/Desktop/code tutorials/Advanced-React-master/sick-fits/frontend/pages/order/[id].js\";\n\n/* eslint-disable react/prop-types */\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport formatMoney from '../../lib/formatMoney';\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order: Order(where: { id: $id }) {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function SingleOrderPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  console.log(data);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this);\n  const {\n    order\n  } = data;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick Fits - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMoney(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"ItemCount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Qty: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Each: \", formatMoney(item.price)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sub Total: \", formatMoney(item.price * item.quantity)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/anniinaaarnio/Desktop/code tutorials/Advanced-React-master/sick-fits/frontend/pages/order/[id].js"],"names":["useQuery","gql","Head","ErrorMessage","OrderStyles","formatMoney","SINGLE_ORDER_QUERY","SingleOrderPage","query","data","error","loading","variables","id","console","log","order","charge","total","items","length","map","item","photo","image","publicUrlTransformed","title","name","quantity","price","description"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport formatMoney from '../../lib/formatMoney';\n\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order: Order(where: { id: $id }) {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function SingleOrderPage({ query }) {\n  const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: { id: query.id },\n  });\n  console.log(data);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <ErrorMessage error={error} />;\n  const { order } = data;\n  return (\n    <OrderStyles>\n      <Head>\n        <title>Sick Fits - {order.id}</title>\n      </Head>\n      <p>\n        <span>Order Id:</span>\n        <span>{order.id}</span>\n      </p>\n      <p>\n        <span>Charge:</span>\n        <span>{order.charge}</span>\n      </p>\n      <p>\n        <span>Order Total:</span>\n        <span>{formatMoney(order.total)}</span>\n      </p>\n      <p>\n        <span>ItemCount:</span>\n        <span>{order.items.length}</span>\n      </p>\n      <div className=\"items\">\n        {order.items.map((item) => (\n          <div className=\"order-item\" key={item.id}>\n            <img src={item.photo.image.publicUrlTransformed} alt={item.title} />\n            <div className=\"item-details\">\n              <h2>{item.name}</h2>\n              <p>Qty: {item.quantity}</p>\n              <p>Each: {formatMoney(item.price)}</p>\n              <p>Sub Total: {formatMoney(item.price * item.quantity)}</p>\n              <p>{item.description}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </OrderStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}